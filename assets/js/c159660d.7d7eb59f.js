"use strict";(self.webpackChunkpenguin_empire_github_io=self.webpackChunkpenguin_empire_github_io||[]).push([[2268],{3905:(e,t,r)=>{r.d(t,{Zo:()=>l,kt:()=>b});var i=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,n=function(e,t){if(null==e)return{};var r,i,n={},a=Object.keys(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)r=a[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=i.createContext({}),c=function(e){var t=i.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},l=function(e){var t=c(e.components);return i.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,p=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=c(r),d=n,b=u["".concat(p,".").concat(d)]||u[d]||m[d]||a;return r?i.createElement(b,o(o({ref:t},l),{},{components:r})):i.createElement(b,o({ref:t},l))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,o=new Array(a);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[u]="string"==typeof e?e:n,o[1]=s;for(var c=2;c<a;c++)o[c]=r[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9315:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var i=r(7462),n=(r(7294),r(3905));const a={title:"Raspberry Pi",sidebar_position:11},o=void 0,s={unversionedId:"advanced-topics/raspberry-pi",id:"advanced-topics/raspberry-pi",title:"Raspberry Pi",description:"Raspberry Pi is a tiny credit-card sized computer that runs Linux.  We use them for vision processing.  Operating Systems we use are WPILibPi or Raspberry Pi OS (Lite).  We choose lite because we won't have a monitor attached to the pi, so a desktop environment is unnessessary.",source:"@site/docs/advanced-topics/raspberry-pi.md",sourceDirName:"advanced-topics",slug:"/advanced-topics/raspberry-pi",permalink:"/docs/advanced-topics/raspberry-pi",draft:!1,editUrl:"https://github.com/PenguinEmpire/PenguinEmpire.github.io/tree/main/docs/advanced-topics/raspberry-pi.md",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"Raspberry Pi",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"Kalman filter",permalink:"/docs/advanced-topics/kalman-filter"},next:{title:"Gloworm",permalink:"/docs/advanced-topics/gloworm"}},p={},c=[{value:"Team 4915 Spartronics Vision",id:"team-4915-spartronics-vision",level:3}],l={toc:c};function u(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,i.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Raspberry Pi is a tiny credit-card sized computer that runs Linux.  We use them for vision processing.  Operating Systems we use are ",(0,n.kt)("inlineCode",{parentName:"p"},"WPILibPi")," or Raspberry Pi OS (Lite).  We choose lite because we won't have a monitor attached to the pi, so a desktop environment is unnessessary."),(0,n.kt)("h3",{id:"team-4915-spartronics-vision"},"Team 4915 Spartronics Vision"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Spartronics4915/Vision"},"Spartronics4915/Vision on Github")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Spartronics4915/Vision/blob/master/BuildRaspi.md"},"Building a Raspberry Pi for FRC - using WPILibPi")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Spartronics4915/Vision/blob/master/LearningVision.md"},"PiCam for Raspberry Pi")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Spartronics4915/Vision/blob/master/WebCams.md"},"Notes on setting up 2022 driver cam from WPILibPi")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Spartronics4915/Vision/blob/master/h264player/README.md"},"h264player in webRTC")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Spartronics4915/Vision/blob/master/droidvision/README.md"},"DroidVision - CheezDroid - Android-based Vision System")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Spartronics4915/4915-rpi-clone"},"4915-rpi-clone (fork of billw/rpi-clone)"))))}u.isMDXComponent=!0}}]);